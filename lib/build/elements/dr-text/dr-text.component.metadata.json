[{"__symbolic":"module","version":4,"metadata":{"DrTextComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../dr-object/dr-object.component","name":"DrObjectComponent","line":11,"character":37},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"dr-text","template":"\n    <ng-template #elementTemplate>\n      <ng-container *ngIf=\"data && visualData\">\n        <svg:g\n          [attr.transform]=\"visualData.rotation > 0 ? 'rotate(' + visualData.rotation + ',' + (visualData.x + visualData.width / 2 )+ ',' + (visualData.y + visualData.height / 2) + ')' : ''\">\n            >\n            <svg:clipPath [id]=\"elementId\">\n                <svg:rect\n                  [attr.x]=\"data.x\"\n                  [attr.y]=\"data.y\"\n                  [attr.width]=\"data.width\"\n                  [attr.height]=\"data.height\">\n                </svg:rect>\n              </svg:clipPath>\n      \n              <svg:rect\n              [ngClass]=\"(visualData.clickable ? hoverClass : '') + (!canInteract ? ' no-interact' : '')\"\n                (click)=\"onClick($event, data)\"\n                (mousedown)=\"onMouseDown($event, data)\"\n                (mousemove)=\"onMouseMove($event, data)\"\n                (mouseup)=\"onMouseUp($event, data)\"\n            \n                [id]=\"elementId\" \n            \n                [attr.x]=\"data.x\"\n                [attr.y]=\"data.y\"\n                [attr.stroke-dasharray]=\"visualData.dashedLine ? '10 10' : ''\"\n                [attr.width]=\"data.width\"\n                [attr.height]=\"data.height\"\n                [attr.fill]=\"visualData.showFill ? visualData.fill : 'transparent'\"\n                [attr.stroke]=\"visualData.showStroke ? visualData.stroke : 'transparent'\"\n                [attr.stroke-width]=\"visualData.strokeWidth\"\n                [attr.opacity]=\"visualData.opacity\">\n              </svg:rect>\n              <svg:g [id]=\"elementId\" [attr.clip-path]=\"'url(#' + elementId + ')'\">\n                <svg:text \n                  [id]=\"elementId\" \n                  (click)=\"onClick($event, data)\"\n                  (mousedown)=\"onMouseDown($event, data)\"\n                  (mousemove)=\"onMouseMove($event, data)\"\n                  (mouseup)=\"onMouseUp($event, data)\"\n                  [attr.x]=\"getTextX()\" \n                  [attr.y]=\"getTextY()\"\n                  [attr.fill]=\"visualData.fontColor\"\n                  [attr.font-size]=\"visualData.size + 'px'\"\n                  [attr.font-family]=\"visualData.fontFamily\"\n                  [attr.font-weight]=\"visualData.bold ? 'bold' : 'normal'\"\n                  [attr.font-style]=\"visualData.italic ? 'italic' : 'normal'\"\n                  [attr.alignment-baseline]=\"getVAlignment()\"\n                  [attr.text-anchor]=\"getHAlignment()\">\n                  {{ visualData.text }}\n              \n                </svg:text>\n              </svg:g>\n        </svg:g>\n      \n      </ng-container>\n    </ng-template>\n  ","styles":["\n\n  "]}]}],"members":{"getTextX":[{"__symbolic":"method"}],"getTextY":[{"__symbolic":"method"}],"getVAlignment":[{"__symbolic":"method"}],"getHAlignment":[{"__symbolic":"method"}]}}}}]