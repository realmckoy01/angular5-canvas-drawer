[{"__symbolic":"module","version":4,"metadata":{"DrCalloutComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../dr-object/dr-object.component","name":"DrObjectComponent","line":9,"character":40},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"app-dr-callout","template":"\n    <ng-template #elementTemplate>\n      <!--<svg:ellipse *ngIf=\"data && visualData\" \n        [ngClass]=\"(visualData.clickable ? hoverClass : '') + (!canInteract ? ' no-interact' : '')\"\n        (click)=\"onClick($event, data)\"\n        (mousedown)=\"onMouseDown($event, data)\"\n        (mousemove)=\"onMouseMove($event, data)\"\n        (mouseup)=\"onMouseUp($event, data)\"\n        [id]=\"elementId\"\n        [attr.transform]=\"visualData.rotation > 0 ? 'rotate(' + visualData.rotation + ',' + (visualData.x)+ ',' + (visualData.y) + ')' : ''\"\n        [attr.stroke-dasharray]=\"visualData.dashedLine ? '10 10' : ''\"\n        [attr.fill]=\"visualData.showFill ? visualData.fill : 'transparent'\"\n        [attr.stroke]=\"visualData.showStroke ? visualData.stroke : 'transparent'\"\n        [attr.stroke-width]=\"visualData.strokeWidth\"\n        [attr.opacity]=\"visualData.opacity\"\n    \n    \n        >\n      </svg:ellipse>-->\n\n      <ng-container *ngIf=\"data && visualData\">\n        <svg:g [id]=\"elementId\">\n          <defs>\n            <clipPath [id]=\"'union_' + elementId\">\n              <svg:rect \n                [attr.x]=\"data.x\" \n                [attr.y]=\"data.y\"\n                [attr.width]=\"data.width\" \n                [attr.height]=\"data.height\">\n              </svg:rect>\n              <svg:polygon\n                [attr.points]=\"getPoints()\"\n                >\n              </svg:polygon>\n            </clipPath>\n          </defs>\n\n          <svg:rect\n            [ngClass]=\"(visualData.clickable ? hoverClass : '') + (!canInteract ? ' no-interact' : '')\"\n            (click)=\"onClick($event, data)\"\n            (mousedown)=\"onMouseDown($event, data)\"\n            (mousemove)=\"onMouseMove($event, data)\"\n            (mouseup)=\"onMouseUp($event, data)\"\n            [attr.opacity]=\"visualData.opacity\"\n            [attr.clip-path]=\"'url(#union_' + elementId + ')'\"\n            [attr.x]=\"getBoundsX()\"\n            [attr.y]=\"getBoundsY()\"\n            [attr.width]=\"getBoundsWidth()\"\n            [attr.height]=\"getBoundsHeight()\"\n       \n            [attr.stroke-dasharray]=\"visualData.dashedLine ? '10 10' : ''\"\n            [attr.fill]=\"visualData.showFill ? visualData.fill : 'transparent'\"\n            [attr.stroke]=\"visualData.showStroke ? visualData.stroke : 'transparent'\"\n            [attr.stroke-width]=\"visualData.strokeWidth\"\n            >\n        \n          </svg:rect>\n\n      \n        </svg:g>\n      </ng-container>\n    </ng-template>\n  ","styles":["\n\n  "]}]}],"members":{"getPoints":[{"__symbolic":"method"}],"getBoundsX":[{"__symbolic":"method"}],"getBoundsY":[{"__symbolic":"method"}],"getBoundsWidth":[{"__symbolic":"method"}],"getBoundsHeight":[{"__symbolic":"method"}]}}}}]