"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("@angular/common");
var i2 = require("./dr-rect.component");
var styles_DrRectComponent = [""];
var RenderType_DrRectComponent = i0.ɵcrt({ encapsulation: 0, styles: styles_DrRectComponent, data: {} });
exports.RenderType_DrRectComponent = RenderType_DrRectComponent;
function View_DrRectComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, ":svg:rect", [], [[8, "id", 0], [1, "x", 0], [1, "y", 0], [1, "stroke-dasharray", 0], [1, "width", 0], [1, "height", 0], [1, "rx", 0], [1, "ry", 0], [1, "fill", 0], [1, "stroke", 0], [1, "stroke-width", 0], [1, "opacity", 0]], [[null, "click"], [null, "mousedown"], [null, "mousemove"], [null, "mouseup"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if (("click" === en)) {
        var pd_0 = (_co.onClick($event, _co.data) !== false);
        ad = (pd_0 && ad);
    } if (("mousedown" === en)) {
        var pd_1 = (_co.onMouseDown($event, _co.data) !== false);
        ad = (pd_1 && ad);
    } if (("mousemove" === en)) {
        var pd_2 = (_co.onMouseMove($event, _co.data) !== false);
        ad = (pd_2 && ad);
    } if (("mouseup" === en)) {
        var pd_3 = (_co.onMouseUp($event, _co.data) !== false);
        ad = (pd_3 && ad);
    } return ad; }, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngClass: [0, "ngClass"] }, null), (_l()(), i0.ɵted(-1, null, ["\n        "]))], function (_ck, _v) { var _co = _v.component; var currVal_12 = ((_co.visualData.clickable ? _co.hoverClass : "") + (!_co.canInteract ? " no-interact" : "")); _ck(_v, 1, 0, currVal_12); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.elementId; var currVal_1 = _co.data.x; var currVal_2 = _co.data.y; var currVal_3 = (_co.visualData.dashedLine ? "10 10" : ""); var currVal_4 = _co.data.width; var currVal_5 = _co.data.height; var currVal_6 = (_co.data.rounded ? 16 : 0); var currVal_7 = (_co.data.rounded ? 16 : 0); var currVal_8 = (_co.visualData.showFill ? _co.visualData.fill : "transparent"); var currVal_9 = (_co.visualData.showStroke ? _co.visualData.stroke : "transparent"); var currVal_10 = _co.visualData.strokeWidth; var currVal_11 = _co.visualData.opacity; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }
function View_DrRectComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, ["\n        "])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_DrRectComponent_2)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, "ngIf"] }, null), (_l()(), i0.ɵted(-1, null, ["\n    "]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.data && _co.visualData); _ck(_v, 2, 0, currVal_0); }, null); }
function View_DrRectComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { elementTemplate: 0 }), (_l()(), i0.ɵted(-1, null, ["\n    "])), (_l()(), i0.ɵand(0, [[1, 2], ["elementTemplate", 2]], null, 0, null, View_DrRectComponent_1)), (_l()(), i0.ɵted(-1, null, ["\n  "]))], null, null); }
exports.View_DrRectComponent_0 = View_DrRectComponent_0;
function View_DrRectComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "dr-rect", [], null, null, null, View_DrRectComponent_0, RenderType_DrRectComponent)), i0.ɵdid(1, 114688, null, 0, i2.DrRectComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_DrRectComponent_Host_0 = View_DrRectComponent_Host_0;
var DrRectComponentNgFactory = i0.ɵccf("dr-rect", i2.DrRectComponent, View_DrRectComponent_Host_0, { data: "data", overrideProperties: "overrideProperties", hoverClass: "hoverClass", canInteract: "canInteract", elementId: "elementId" }, { click: "click", mouseDown: "mouseDown", mouseMove: "mouseMove", mouseUp: "mouseUp" }, []);
exports.DrRectComponentNgFactory = DrRectComponentNgFactory;
//# sourceMappingURL=dr-rect.component.ngfactory.js.map