import { OnInit, OnDestroy } from '@angular/core';
import { DataStoreService } from '../../services/data-store.service';
import { DrObject } from '../../models/dr-object';
import { DrRect } from '../../models/dr-rect';
import { DrawerObjectHelperService } from '../../services/drawer-object-helper.service';
import { MouseEventData } from '../../models/mouse-event-data';
import { ChangeHelperService } from '../../services/change-helper.service';
export declare class SelectorToolComponent implements OnInit, OnDestroy {
    private _dataStoreService;
    private _objectHelperService;
    private _changeService;
    elementState: any;
    sizers: number[];
    boundingBoxObjectUniqueId: number;
    boundingBoxObject: DrRect;
    selectedObjects: DrObject[];
    selectionTransform: string;
    cssBounds: any;
    cursor: string;
    invisibleStyle: any;
    selectionStyle: any;
    private _subRedid;
    private _subUndid;
    private _subSelectionChanged;
    private _subSelectedBoundsChanged;
    private _mouseDownClones;
    private _mouseDownLocation;
    private _mouseDown;
    private _mouseDownSizer;
    constructor(_dataStoreService: DataStoreService, _objectHelperService: DrawerObjectHelperService, _changeService: ChangeHelperService);
    ngOnInit(): void;
    onBackgroundMouseDown(evt: any): void;
    onBackgroundMouseMove(evt: any): void;
    onBackgroundMouseUp(evt: any): void;
    onMouseDown(data: MouseEventData): void;
    onMouseMove(data: MouseEventData): void;
    onMouseUp(data: MouseEventData): void;
    onResizerMouseDown(evt: any, index: number): void;
    onResizerMouseMove(evt: any, index: number): void;
    onResizerMouseUp(evt: any, index: number): void;
    getResizerX(index: number): number;
    getResizerY(index: number): number;
    getResizerCursor(index: number): string;
    private setupBounds();
    private resizeObjects(location);
    private resizeH(b, location, opposite);
    private resizeV(b, location, opposite);
    private applyResizeChanges();
    ngOnDestroy(): void;
}
